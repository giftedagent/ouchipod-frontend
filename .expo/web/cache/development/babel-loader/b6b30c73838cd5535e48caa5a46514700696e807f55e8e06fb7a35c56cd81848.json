{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { Link } from 'expo-router';\nimport * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function ExternalLink(props) {\n  return _jsx(Link, _objectSpread(_objectSpread({\n    hrefAttrs: {\n      target: '_blank'\n    }\n  }, props), {}, {\n    onPress: function onPress(e) {\n      if (Platform.OS !== 'web') {\n        e.preventDefault();\n        WebBrowser.openBrowserAsync(props.href);\n      }\n    }\n  }));\n}","map":{"version":3,"names":["Link","WebBrowser","React","Platform","jsx","_jsx","ExternalLink","props","_objectSpread","hrefAttrs","target","onPress","e","OS","preventDefault","openBrowserAsync","href"],"sources":["/Users/motono/Desktop/work_hack/OUCHI_Pod/components/ExternalLink.tsx"],"sourcesContent":["import { Link } from 'expo-router';\nimport * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { Platform } from 'react-native';\n\nexport function ExternalLink(props: React.ComponentProps<typeof Link>) {\n  return (\n    <Link\n      hrefAttrs={{\n        // On web, launch the link in a new tab.\n        target: '_blank',\n      }}\n      {...props}\n      onPress={(e) => {\n        if (Platform.OS !== 'web') {\n          // Prevent the default behavior of linking to the default browser on native.\n          e.preventDefault();\n          // Open the link in an in-app browser.\n          WebBrowser.openBrowserAsync(props.href as string);\n        }\n      }}\n    />\n  );\n}\n"],"mappings":";;;AAAA,SAASA,IAAI,QAAQ,aAAa;AAClC,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAG1B,OAAO,SAASC,YAAYA,CAACC,KAAwC,EAAE;EACrE,OACEF,IAAA,CAACL,IAAI,EAAAQ,aAAA,CAAAA,aAAA;IACHC,SAAS,EAAE;MAETC,MAAM,EAAE;IACV;EAAE,GACEH,KAAK;IACTI,OAAO,EAAE,SAAAA,QAACC,CAAC,EAAK;MACd,IAAIT,QAAQ,CAACU,EAAE,KAAK,KAAK,EAAE;QAEzBD,CAAC,CAACE,cAAc,EAAE;QAElBb,UAAU,CAACc,gBAAgB,CAACR,KAAK,CAACS,IAAI,CAAW;MACnD;IACF;EAAE,GACF;AAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}